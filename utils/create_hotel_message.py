
from aiogram.types import Message, InputMediaPhoto
from loguru import logger


async def create_hotel_message(message: Message, hotel: dict, data: dict):
	string = f"üèô –ù–∞–∑–≤–∞–Ω–∏–µ –æ—Ç–µ–ª—è: {hotel['name']}\n" \
			 f"üè¢ –ê–¥—Ä–µ—Å –æ—Ç–µ–ª—è: {hotel['address']}\n" \
			 f"üåê –°–∞–π—Ç: https://www.hotels.com/ho{hotel['id']}\n" \
			 f"üöç –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ —Ü–µ–Ω—Ç—Ä–∞: {hotel['distance']} –ö–º\n" \
			 f"üíµ –°—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è –≤ —Å—É—Ç–∫–∏ {hotel['price']}\n" \
			 f"‚≠ê —Ä–µ–π—Ç–∏–Ω–≥ –ø–æ –º–Ω–µ–Ω–∏—é –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π {hotel['user_rating']}\n" \
			 f"üó∫ –û—Ç–µ–ª—å –Ω–∞ –∫–∞—Ä—Ç–µ: https://maps.google.com/maps?z=12&t=m&q=loc:{hotel['coordinates']}"

	image_url = [hotel['images'][url] for url in range(int(data['count_photo']))]
	medias = []
	if image_url:
		for index, url in enumerate(image_url):
			medias.append(InputMediaPhoto(media=url))

		await message.answer(text=string)
		await message.answer_media_group(media=medias)
	else:
		await message.answer(text=string)

	logger.info(f'–í—ã–≤–æ–¥ –≤ —á–∞—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –æ—Ç–µ–ª–µ. User_id {message.message.chat.id}')